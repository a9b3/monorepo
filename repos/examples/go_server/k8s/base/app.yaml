apiVersion: v1
kind: Namespace
metadata:
  name: go-server
---
# This maps a loadbalancer ingress into the cluster to a k8s service.
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: go-server
  annotations:
    kubernetes.io/ingress.allow-http: "true"
    # What should the external DNS name be
    external-dns.alpha.kubernetes.io/hostname: "go-server.examples.test"
    kubernetes.io/ingress.class: nginx
spec:
  rules:
    # For the given external DNS host redirect to the service specified.
    - host: go-server.examples.test
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: go-server
                port:
                  number: 50051
---
# A service is a mechanism to allow for a stable DNS name for a set of
# dynamically allocated pods with dynamic IPs.
kind: Service
apiVersion: v1
metadata:
  name: go-server
  labels:
    app: go-server
spec:
  selector:
    app: go-server
  ports:
    - name: go-server
      port: 80
      targetPort: 50051
---
# The deployment manages the set of running pods, they will all have dynamic IPs
# since the pods are ephemeral.
kind: Deployment
apiVersion: apps/v1
metadata:
  name: go-server
spec:
  selector:
    matchLabels:
      app: go-server
  replicas: 1
  template:
    metadata:
      labels:
        app: go-server
    spec:
      initContainers:
        - name: wait-for-db-ready
          image: postgres:14.2
          env:
            - name: CONNSTRING
              # This needs to be postgres:// because it's using the
              # postgres:14.2 image.
              value: "postgres://user:password@postgres.go-server.svc:5432/database"
          command:
            [
              "sh",
              "-c",
              "until pg_isready -h postgres.go-server.svc -p 5432; do echo waiting for database; sleep 2; done;",
            ]
        - name: run-migration
          image: go-server
          env:
            - name: CONNSTRING
              # This needs to be pgx:// since that is the golang driver being
              # used. Supplying postgres:// will cause an error.
              value: "pgx://user:password@postgres.go-server.svc:5432/database"
              # This is the location of the migration directory from within the
              # go-server image which is built by bazel, you can check the value
              # by looking at the filegroup and pkg_tar rule definitions in the
              # project root BUILD.bazel
            - name: MIGRATION_DIR
              value: "/etc/internal/sqlc/migrations"
          args: ["migrate"]
      containers:
        - name: go-server
          image: go-server
          imagePullPolicy: "Always"
          ports:
            - containerPort: 50051
          env:
            - name: PORT
              value: "50051"
            - name: LOGLEVEL
              value: "info"
            - name: DEBUG
              value: "true"
            - name: CONNSTRING
              # The hostname should be kubernetes DNS resolvable. Using the
              # default k8s naming convention, this value assumes there is a
              # service exposed within the cluster named postgres in the
              # namespace go-server.
              # Change this to whatever the postgres cluster hostname is.
              value: "postgres://user:password@postgres.go-server.svc:5432/database"
