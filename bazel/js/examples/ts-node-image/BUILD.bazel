load("//bazel/image:exports.bzl", "run_image")
load("//bazel/js:exports.bzl", "js_binary", "js_image_layer", "ts_project")

ts_project(
    name = "project",
    srcs = ["index.ts"],
)

js_binary(
    name = "bin",
    data = [":project"],
    entry_point = "index.js",
)

js_binary(
    name = "dockerbin",
    data = [":project"],
    entry_point = "index.js",
    node_toolchain = "@nodejs_linux_amd64//:node_toolchain",
)

js_image_layer(
    name = "layers",
    binary = ":dockerbin",
    root = "/app",
    visibility = ["//visiblity:__pkg__"],
)

run_image(
    name = "ts_node_image",
    tar_path_root = "bazel/js/examples/ts-node-image/",
    cmd = ["/app/bazel/js/examples/ts-node-image/dockerbin"],
    tars = [":layers"],
)
# oci_image(
#     name = "image",
#     base = "@debian_linux_amd64",
#     # This is going to be /{root of js_image_layer}/{package_name()}/{name of js_binary}
#     cmd = ["/app/bazel/js/examples/ts-node-image/dockerbin"],
#     entrypoint = ["bash"],
#     tars = [
#         ":layers",
#     ],
#     visibility = ["//visibility:public"],
# )
#
# # bazel build //bazel/js/examples/ts-node-image:tarball
# # docker load --input $(bazel cquery --output=files //bazel/js/examples/ts-node-image:tarball)
# # docker run --rm example:latest
# #
# #   one line
# #
# # bazel build //bazel/js/examples/ts-node-image:tarball && docker load --input $(bazel cquery --output=files //bazel/js/examples/ts-node-image:tarball) && docker run --rm example:latest
# oci_tarball(
#     name = "tarball",
#     image = ":image",
#     repo_tags = ["example:latest"],
# )
