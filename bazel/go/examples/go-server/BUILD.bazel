load("//bazel/go:exports.bzl", "go_binary", "go_library", "go_test")
load("//bazel/image:exports.bzl", "oci_image", "oci_tarball", "pkg_tar", "server_image_package")

go_library(
    name = "lib",
    srcs = ["main.go"],
    importpath = "github.com/publiclabel/monorepo/bazel/go/examples/go-server",
    visibility = ["//visibility:private"],
)

go_test(
    name = "test",
    srcs = ["main_test.go"],
    embed = [":lib"],
    target_compatible_with = select({
      "//conditions:default": ["@platforms//cpu:arm64"],
    }),
)

go_binary(
    name = "bin_arm64",
    embed = [":lib"],
    visibility = ["//visibility:public"],
)

go_binary(
    name = "bin_amd64",
    embed = [":lib"],
    visibility = ["//visibility:public"],
    goarch = "amd64",
    goos = "linux",
)

server_image_package(
    name = "server",
    expected_response = "Hello what, test!",
    endpoint = "test",
    tar_path_root = "bazel/go/examples/go-server/",
    port = 8080,
    platform_targets = [
      {
        "platform": "linux/amd64",
        "target": ":bin_amd64",
        "entrypoint": ["/bin_amd64"],
        "base": "@distroless_base_linux_amd64",
        "create_test": True,
      },
      {
        "platform": "linux/arm64",
        "target": ":bin_arm64",
        "entrypoint": ["/bin_arm64"],
        "base": "@distroless_base_linux_arm64",
        "create_test": False,
      },
    ],
)
