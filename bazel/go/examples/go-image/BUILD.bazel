load("//bazel/go:exports.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

go_library(
    name = "go-image_lib",
    srcs = ["main.go"],
    importpath = "github.com/publiclabel/monorepo/bazel/go/examples/go-image",
    visibility = ["//visibility:private"],
)

go_binary(
    name = "app",
    embed = [":go-image_lib"],
    #  These are required to be able to run the executable in the oci_image
    #  below. But this will make it not possible to bazel run this in arm64.
    # goarch = "amd64",
    # goos = "linux",
    visibility = ["//visibility:public"],
)

pkg_tar(
    name = "tar",
    srcs = [":app"],
)

oci_image(
    name = "image",
    base = "@distroless_base",
    entrypoint = ["/app"],
    tars = [":tar"],
)

# bazel build //bazel/go/examples/go-image:tarball
# docker load --input $(bazel cquery --output=files //bazel/go/examples/go-image:tarball)
# docker run --rm example-go-image:latest

oci_tarball(
    name = "tarball",
    image = ":image",
    repo_tags = ["example-go-image:latest"],
)
