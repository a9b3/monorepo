module(
    name = "monorepo",
    version = "0.0.1",
)

bazel_dep(name = "platforms", version = "0.0.6")
bazel_dep(name = "bazel_skylib", version = "1.4.1")
bazel_dep(name = "bazel_skylib_gazelle_plugin", dev_dependency = True, version = "1.4.1")
bazel_dep(name = "rules_go", version = "0.39.1")
bazel_dep(name = "gazelle", version = "0.30.0")
bazel_dep(name = "rules_proto", version = "5.3.0-21.7")
bazel_dep(name = "rules_oci", version = "1.0.0-rc1")
bazel_dep(name = "aspect_bazel_lib", version = "1.28.0")

###############################################################################
# >>> OCI STUFF
###############################################################################

oci = use_extension("@rules_oci//oci:extensions.bzl", "oci")

oci.toolchains(crane_version = "v0.14.0")

# ( name, digest, image )
_BASE_IMAGES = [
    (
        "debian",
        "sha256:63d62ae233b588d6b426b7b072d79d1306bfd02a72bff1fc045b8511cc89ee09",
        "debian",
    ),
    (
        "distroless_node",
        "sha256:63d62ae233b588d6b426b7b072d79d1306bfd02a72bff1fc045b8511cc89ee09",
        "gcr.io/distroless/nodejs20-debian11",
    ),
]

[
    oci.pull(
        name = image[0],
        digest = image[1],
        image = image[2],
        # DOES NOT WORK
        # https://github.com/bazelbuild/bazel/issues/17655
        # all the aliases for platforms are listed here
        # https://github.com/bazel-contrib/rules_oci/blob/2e7ca44886f5dae977408c55f0a7be8743e6db08/oci/pull.bzl#L334
        #
        # slack convo regarding unknown repo platforms
        # https://bazelbuild.slack.com/archives/CA3NW13MH/p1683306040074659
        platforms = [
            "linux/amd64",
            "linux/arm64/v8",
        ],
    )
    for image in _BASE_IMAGES
]

[
    use_repo(
        oci,
        image[0],
    )
    for image in _BASE_IMAGES
]

###############################################################################
# <<< END OCI STUFF
###############################################################################

###############################################################################
# >>> ASPECT JS STUFF
###############################################################################

bazel_dep(name = "aspect_rules_js", version = "1.27.1")

####### Node.js version #########
# By default you get the node version from DEFAULT_NODE_VERSION in @rules_nodejs//nodejs:repositories.bzl
# Optionally you can pin a different node version:
bazel_dep(name = "rules_nodejs", version = "5.8.2")

node = use_extension(
    "@rules_nodejs//nodejs:extensions.bzl",
    "node",
)

node.toolchain(node_version = "16.14.2")

# Copied from here
# seems like rules_nodejs builds platform specific binaries
# https://github.com/aspect-build/rules_js/blob/93f4bf17caa05905eb31bfa5b82ee63dbbd2ad86/MODULE.bazel#L16
use_repo(node, "nodejs_darwin_arm64")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)

npm.npm_translate_lock(
    name = "npm",
    pnpm_lock = "//:pnpm-lock.yaml",
)

use_repo(npm, "npm")

pnpm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "pnpm",
    dev_dependency = True,
)

use_repo(pnpm, "pnpm")

bazel_dep(name = "aspect_rules_ts", version = "1.3.3")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)

rules_ts_ext.deps()

use_repo(rules_ts_ext, "npm_typescript")

###############################################################################
# <<< END ASPECT JS STUFF
###############################################################################

###############################################################################
# >>> GO LANG STUFF
###############################################################################

go_sdk = use_extension("@rules_go//go:extensions.bzl", "go_sdk")

go_sdk.download(version = "1.20.3")

###############################################################################
# <<< END GO LANG STUFF
###############################################################################
