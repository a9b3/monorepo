load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")

# gazelle:prefix github.com/publiclabel/monorepo
#
#
# -----------------------------------------------------------------------------
# Proto Rule
# -----------------------------------------------------------------------------
#
# gazelle:proto_plugin protoc-gen-go implementation golang:protobuf:protoc-gen-go
#
# gazelle:proto_rule proto_compile implementation stackb:rules_proto:proto_compile
# gazelle:proto_rule proto_compiled_sources implementation stackb:rules_proto:proto_compiled_sources
# gazelle:proto_rule proto_go_library implementation stackb:rules_proto:proto_go_library
# gazelle:proto_rule proto_go_library deps @org_golang_google_protobuf//reflect/protoreflect
# gazelle:proto_rule proto_go_library deps @org_golang_google_protobuf//runtime/protoimpl
# gazelle:proto_rule proto_go_library visibility //visibility:public
#
# gazelle:proto_language go plugin protoc-gen-go
# gazelle:proto_language go rule proto_compile
# gazelle:proto_language go rule proto_compiled_sources
# gazelle:proto_language go rule proto_go_library
#
# -----------------------------------------------------------------------------
# Excludes
# -----------------------------------------------------------------------------
#
# gazelle:exclude bazel-out
# gazelle:exclude devx/go/scripts/lib
#
# -----------------------------------------------------------------------------
# Map Kinds
# -----------------------------------------------------------------------------
#
# gazelle:map_kind go_binary go_binary //devx/go:exports.bzl
# gazelle:map_kind go_library go_library //devx/go:exports.bzl
# gazelle:map_kind go_proto_library go_proto_library //devx/go:exports.bzl
# gazelle:map_kind go_test go_test //devx/go:exports.bzl
#
# gazelle:map_kind proto_library proto_library //devx/protobuf:exports.bzl
#
# -----------------------------------------------------------------------------
# Resolves
# -----------------------------------------------------------------------------
# Gazelle generates go_proto_library + go_library rules both with the same
# importpath causing a matches multiple rules error.
#
# gazelle:go_generate_proto false
gazelle(
    name = "gazelle",
    gazelle = ":gazelle-protobuf",
)

gazelle_binary(
    name = "gazelle-protobuf",
    languages = DEFAULT_LANGUAGES + [
        # must be after the proto extension (order matters)
        "@build_stack_rules_proto//language/protobuf",
    ],
)

gazelle(
    name = "gazelle-update-repos",
    args = [
        "-from_file=go.mod",
        "-to_macro=deps.bzl%go_dependencies",
        "-prune",
    ],
    command = "update-repos",
)
