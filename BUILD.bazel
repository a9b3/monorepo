# load("@bazel_gazelle//:def.bzl", "DEFAULT_LANGUAGES", "gazelle", "gazelle_binary")

# gazelle:prefix github.com/publiclabel/monorepo

# -----------------------------------------------------------------------------
# Go
# -----------------------------------------------------------------------------

# gazelle:proto_plugin protoc-gen-go implementation golang:protobuf:protoc-gen-go
# gazelle:proto_plugin protoc-gen-go-grpc implementation grpc:grpc-go:protoc-gen-go-grpc

# gazelle:proto_rule proto_compile implementation stackb:rules_proto:proto_compile
# gazelle:proto_rule proto_compiled_sources implementation stackb:rules_proto:proto_compiled_sources
# gazelle:proto_rule proto_go_library implementation stackb:rules_proto:proto_go_library
# gazelle:proto_rule proto_go_library deps @org_golang_google_protobuf//reflect/protoreflect
# gazelle:proto_rule proto_go_library deps @org_golang_google_protobuf//runtime/protoimpl
# gazelle:proto_rule proto_go_library visibility //visibility:public

# gazelle:proto_language go plugin protoc-gen-go
# gazelle:proto_language go plugin protoc-gen-go-grpc
# gazelle:proto_language go rule proto_compile

# https://github.com/bazelbuild/rules_go/blob/eb03b81312c3d459fb1ffdb18da9aa122e649905/proto/core.rst#option-2-use-pre-generated-pb-go-files
#
# gazelle:go_generate_proto false

# -----------------------------------------------------------------------------
# Excludes
# -----------------------------------------------------------------------------
#
# gazelle:exclude bazel-out
# gazelle:exclude bazel-bin
# gazelle:exclude bazel-monorepo-2
# gazelle:exclude bazel-testlogs
# gazelle:exclude external
# gazelle:exclude bazel/go/scripts/lib
#
# -----------------------------------------------------------------------------
# Map Kinds
# -----------------------------------------------------------------------------
#
# gazelle:map_kind go_binary go_binary //bazel/go:exports.bzl
# gazelle:map_kind go_library go_library //bazel/go:exports.bzl
# gazelle:map_kind go_proto_library go_proto_library //bazel/go:exports.bzl
# gazelle:map_kind go_test go_test //bazel/go:exports.bzl
#
# gazelle:map_kind proto_library proto_library //bazel/protobuf:exports.bzl
#
# -----------------------------------------------------------------------------
# Resolves
# -----------------------------------------------------------------------------
# Gazelle generates go_proto_library + go_library rules both with the same
# importpath causing a matches multiple rules error.

# gazelle(
#     name = "gazelle",
#     gazelle = ":gazelle-protobuf",
# )
#
# gazelle_binary(
#     name = "gazelle-protobuf",
#     languages = DEFAULT_LANGUAGES + [
#         # must be after the proto extension (order matters)
#         "@build_stack_rules_proto//language/protobuf",
#     ],
# )
#
# gazelle(
#     name = "gazelle-update-repos",
#     args = [
#         "-from_file=go.mod",
#         "-to_macro=deps.bzl%go_dependencies",
#         "-prune",
#     ],
#     command = "update-repos",
# )

# load("@com_github_bazelbuild_buildtools//buildifier:def.bzl", "buildifier")
#
# buildifier(
#     name = "buildifier",
# )

# exports_files([
#     ".swcrc",
#     "tsconfig.json",
#     "jest.config.ts",
#     "package.json",
# ])
#
# xcode_version(
#     name = "11",
#     aliases = [
#         "11.0",
#         "11",
#     ],
#     version = "11.0",
# )
#
# # Error: Invoking xcodebuild failed, developer dir: /Applications/Xcode.app/Contents/Developer ,return code 1, stderr: xcodebuild: error: SDK "" cannot be located. , stdout:
# xcode_config(
#     name = "host_xcodes",
#     default = ":11",
#     versions = [":11"],
# )
#
# available_xcodes(
#     name = "host_available_xcodes",
#     default = ":11",
#     versions = [":11"],
# )

# load("@npm//:defs.bzl", "npm_link_all_packages")
#
# npm_link_all_packages(
#     name = "node_modules",
# )
